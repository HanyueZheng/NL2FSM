Based on the values of the error counters, the <phrase>CAN</phrase> controller is<phrase> set</phrase> into the states:<phrase> <phrase>error-active</phrase>, <phrase>error-passive</phrase> or <phrase>bus</phrase>-off</phrase>.
The MCP2515 contains two error counters:<phrase> the Receive Error Counter (REC) (see Register 6-2) and the Transmit Error Counter (<phrase>TEC</phrase>) (see Register 6-1)</phrase>. The values of both counters can be read by<phrase> the <phrase><phrase>MCU</phrase></phrase></phrase>. These counters are incremented/decremented in accordance with the <phrase>CAN</phrase> <phrase>bus</phrase> specification.<phrase> The MCP2515 is <phrase>error-active</phrase> </phrase>if <phrase><phrase>both error counters are below the error-passive limit of 128</phrase></phrase>.<phrase> It is <phrase>error-passive</phrase> </phrase>if <phrase><phrase>at least one of the error counters equals or exceeds 128</phrase></phrase>.
<phrase>It goes to <phrase>bus</phrase>-off </phrase>if <phrase>the <phrase>TEC</phrase> exceeds the <phrase>bus</phrase>-off limit of 255</phrase>. The device remains in this <phrase>state</phrase> until the <phrase>bus</phrase>-off recovery <phrase>sequence</phrase> is received. The <phrase>bus</phrase>-off recovery <phrase>sequence</phrase> consists of 128 occurrences of 11 consecutive recessive <phrase>bits</phrase> (see Figure 6-1).
<phrase>The MCP2515, </phrase>after going <phrase>bus</phrase>-off, will recover back to <phrase>error-active</phrase> without any intervention by<phrase> the <phrase><phrase>MCU</phrase></phrase></phrase> if <phrase>the <phrase>bus</phrase> remains idle for 128 x 11 <phrase>bit</phrase> times</phrase>. If <phrase>this is not desired, the error Interrupt Service Routine (<phrase>ISR</phrase>) should address this</phrase>.

If <phrase>transmission is initiated via the <phrase>SPI</phrase> interface, the <phrase><phrase>TXREQ</phrase></phrase> <phrase>bit</phrase> can be<phrase> set</phrase> at the same time as the TXPx priority <phrase>bits</phrase></phrase>. When <phrase><phrase>TXREQ</phrase></phrase> is<phrase> set</phrase>, the <phrase><phrase>ABTF</phrase></phrase>, <phrase><phrase>MLOA</phrase></phrase> and <phrase><phrase>TXERR</phrase></phrase> <phrase>bits</phrase> (TXBnCTRL[5:<phrase>4]) will be<phrase><phrase> cleared</phrase> automatically</phrase></phrase>.Setting the <phrase><phrase>TXREQ</phrase></phrase> <phrase>bit</phrase> (TXBnCTRL[3]) does not initiate a message transmission. It merely <phrase>flags</phrase> a message buffer as being ready for transmission.<phrase> Transmission will start </phrase>when <phrase>the device detects that the <phrase>bus</phrase> is available</phrase>.
Once the <phrase>transmission has completed successfully</phrase>, the <phrase><phrase>TXREQ</phrase></phrase> <phrase>bit</phrase> will be<phrase> cleared</phrase>, the TXnIF <phrase>bit</phrase> (<phrase>CAN</phrase><phrase>INT</phrase>F) will be<phrase> set</phrase> and <phrase>an interrupt will be generated</phrase> if the TXnIE <phrase>bit</phrase> (<phrase>CAN</phrase><phrase>INT</phrase><phrase>E</phrase>) is<phrase> set</phrase>.<phrase>
</phrase>If the message <phrase>transmission fails</phrase>, the <phrase><phrase>TXREQ</phrase></phrase> <phrase>bit</phrase> will remain<phrase> set</phrase>.<phrase><phrase> This indicates that the message is still pending for transmission and one of the following condition <phrase>flags</phrase> </phrase>will be<phrase> set</phrase>:
<phrase>• </phrase></phrase>If the message <phrase>started to transmit</phrase> but <phrase>encountered an error condition</phrase>, the <phrase><phrase>TXERR</phrase></phrase> (<phrase>TXBnCTRL[4</phrase>]) and <phrase>MERRF</phrase> <phrase>bits</phrase> (<phrase>CAN</phrase><phrase>INT</phrase>F[7]) will be<phrase> set</phrase>, and <phrase>an interrupt will be generated</phrase> on the <phrase>INT</phrase> pin if the <phrase>MERRE</phrase> <phrase>bit</phrase> (<phrase>CAN</phrase><phrase>INT</phrase><phrase>E</phrase>[7]) is<phrase> set</phrase>.
<phrase>• </phrase>If <phrase>the message is lost</phrase>, <phrase>arbitration</phrase> at the <phrase><phrase>MLOA</phrase></phrase> <phrase>bit</phrase> (TXBnCTRL[5]) will be<phrase> set</phrase>.

<phrase>The MCP2542FD/4FD and MCP2542WFD/4WFD enter <phrase>Unpowered mode</phrase> under the following conditions:
•After powering up the device, or
•</phrase>If <phrase>VDD</phrase> drops below VP<phrase>OR</phrase>L, or
•If <phrase>VIO</phrase> drops below VP<phrase>OR</phrase>L_<phrase>VIO</phrase>.
The MCP2542FD/4FD and MCP2542WFD/4WFD transitions from <phrase>Unpowered mode</phrase> to <phrase>Wake mode</phrase> when <phrase>VDD</phrase> and <phrase>VIO</phrase> are above their P<phrase>OR</phrase>H levels.<phrase><phrase> From <phrase><phrase>Normal mode</phrase></phrase>, </phrase>the device will also enter <phrase>Wake mode</phrase> </phrase>if <phrase>VDD</phrase> is smaller than VUVL, or if the <phrase>band</phrase> gap output voltage is not within valid <phrase>range</phrase>. Additionally, the device will transition from <phrase>Standby mode</phrase> to <phrase>Wake mode</phrase> if <phrase><phrase>STBY</phrase> is pulled Low</phrase>.
In <phrase>Wake mode</phrase>, the <phrase>CAN</phrase> <phrase>bus</phrase> is biased to ground and <phrase>RXD</phrase> is always <phrase>high</phrase>.
When <phrase>VDD</phrase> exceeds VUVH, the <phrase>band</phrase> gap is within valid <phrase>range</phrase> and <phrase>TXD</phrase> is <phrase>High</phrase>, the device transitions into <phrase><phrase>Normal mode</phrase></phrase>.
The device may be placed in <phrase>Standby mode</phrase> by applying a <phrase>high</phrase> level to the <phrase>STBY</phrase> pin. In <phrase>Standby mode</phrase>, the transmitter and the <phrase>high</phrase>-speed part of the receiver are switched off to minimize power consumption.
<phrase>The MCP2542WFD/4WFD wakes up from <phrase>Standby/<phrase>Silent mode</phrase></phrase> </phrase>when a dedicated wake-up pattern (<phrase>WUP</phrase>) is detected on the <phrase>CAN</phrase> <phrase>bus</phrase>. The wake-up pattern is specified in <phrase><phrase>ISO</phrase></phrase> 11898-6 and <phrase><phrase>ISO</phrase></phrase>11898-2:2016

Conditions for entering the Power On Reset:
<phrase>• </phrase><phrase>VBAT</phrase> is below the <phrase>VBAT</phrase>_POD <phrase>AND</phrase> <phrase>VCC</phrase> is below <phrase>VCC</phrase>_UV threshold.
Conditions for leaving the Power On Reset:
<phrase>• </phrase>Once the power supply voltage <phrase>VBAT</phrase> <phrase>OR</phrase> <phrase>VCC</phrase> is within the functional <phrase>range</phrase> the transceiver enters Stand-by Mode within tPON.
<phrase>The the internal Power On Reset flag </phrase>will be<phrase> set</phrase>. After <phrase>Power On Reset the TLE9252V enters Stand-by Mode</phrase>.


The HI-3110 transmit buffer consists of an eight message <phrase>FIFO</phrase> which allows transmission of up to eight messages. Messages are loaded to the transmit <phrase>FIFO</phrase> via <phrase>SPI</phrase> instruction. The
next message to be<phrase> transmitted</phrase> (or current message trying to gain access to the <phrase>bus</phrase>) is loaded from the <phrase>FIFO</phrase> to the Transmit Buffer.<phrase> This will happen automatically </phrase>if <phrase>TXEN</phrase> or TX1M are<phrase> set</phrase> in CTRL1. If <phrase>the <phrase>bus</phrase> is available, the message is sent</phrase>. The Transmit <phrase>History</phrase> <phrase>FIFO</phrase> can optionally be used by<phrase> the host to keep a record of up to eight successfully<phrase> transmitted</phrase> messages</phrase>. The current transmission <phrase>sequence</phrase> can also be paused by resetting the <phrase>TXEN</phrase> <phrase>bit</phrase> in CTRL1 (or pulling <phrase>TXEN</phrase> pin low).<phrase> In this case, the current message </phrase>will be completed and any remaining messages in the transmit <phrase>FIFO</phrase> will not be<phrase> transmitted</phrase>.
If the current message transmission goes ahead, two things can happen:
a) The message is successful, and the transmit buffer is now ready to receive the next message from the transmit <phrase>FIFO</phrase>.
The transmit <phrase>history</phrase> <phrase>FIFO</phrase> is updated (see below).
b) The message is not successful due to <phrase>lost</phrase> <phrase>arbitration</phrase> or message error.
<phrase>Lost</phrase> <phrase>Arbitration</phrase>:<phrase> If <phrase><phrase>arbitration</phrase> is <phrase>lost</phrase>, the current message stays in the Transmit Buffer for re-transmission</phrase></phrase>.
Message error: Flag <phrase>BUSERR</phrase> is<phrase> set</phrase> in the Interrupt Flag Register. An error frame is sent and an optional hardware interrupt may also <phrase>be generated</phrase> at the <phrase>INT</phrase> pin if enabled in the Interrupt Enable Register (<phrase>bit</phrase> <phrase>BUSERR</phrase>IE = 1). If there is an error, the current message stays in the Transmit Buffer for automatic re-transmission in accordance with the <phrase>CAN</phrase> protocol.

When <phrase>TXBNCTRL</phrase>.<phrase><phrase>TXREQ</phrase></phrase> is<phrase> set</phrase>, the <phrase>TXBNCTRL</phrase>.<phrase><phrase>ABTF</phrase></phrase>, <phrase>TXBNCTRL</phrase>.<phrase><phrase>MLOA</phrase></phrase> and <phrase>TXBNCTRL</phrase>.<phrase><phrase>TXERR</phrase></phrase> <phrase>bits</phrase> will be<phrase> cleared</phrase>.
Setting the <phrase>TXBNCTRL</phrase>.<phrase><phrase>TXREQ</phrase></phrase> <phrase>bit</phrase> does not initiate amessage transmission, it merely <phrase>flags</phrase> a message buffer as ready for transmission.<phrase> Transmission will start </phrase>when <phrase>the device detects that the <phrase>bus</phrase> is available</phrase>. The device will then begin transmission of the highest priority message that is ready. When the <phrase>transmission has completed successfully</phrase> the
<phrase>TXBNCTRL</phrase>.<phrase><phrase>TXREQ</phrase></phrase> <phrase>bit</phrase> will be<phrase> cleared</phrase>, the <phrase>CAN</phrase><phrase>INT</phrase>F.<phrase>TXN</phrase>IF <phrase>bit</phrase> will be<phrase> set</phrase>, and <phrase>an interrupt will be generated</phrase> if the <phrase>CAN</phrase><phrase>INT</phrase><phrase>E</phrase>.<phrase>TXN</phrase>IE <phrase>bit</phrase> is<phrase> set</phrase>. If the message <phrase>transmission fails</phrase>, the <phrase>TXBNCTRL</phrase>.<phrase><phrase>TXREQ</phrase></phrase> will remain<phrase> set</phrase> indicating that the message is still pending for transmission and one of the following condition <phrase>flags</phrase> will be<phrase> set</phrase>. If the message
<phrase>started to transmit</phrase> but <phrase>encountered an error condition</phrase>, the <phrase>TXBNCTRL</phrase>. <phrase><phrase>TXERR</phrase></phrase> and the <phrase>CAN</phrase><phrase>INT</phrase>F.<phrase>MERRF</phrase> <phrase>bits</phrase> will be<phrase> set</phrase> and <phrase>an interrupt will be generated</phrase> on the <phrase>INT</phrase> pin if the <phrase>CAN</phrase><phrase>INT</phrase><phrase>E</phrase>.<phrase>MERRE</phrase> <phrase>bit</phrase> is<phrase> set</phrase>. If the message <phrase>lost</phrase> <phrase>arbitration</phrase> the <phrase>TXBNCTRL</phrase>.<phrase><phrase>MLOA</phrase></phrase> <phrase>bit</phrase> will be
<phrase>set</phrase>.
The <phrase><phrase>MCU</phrase></phrase> can request to abort a message in a specific message buffer by<phrase> clearing the associated TXBnCTRL</phrase>. <phrase><phrase>TXREQ</phrase></phrase> <phrase>bit</phrase>. Also, all pending messages can be requested to be aborted by<phrase> set</phrase>ting the <phrase>CAN</phrase>CTRL. <phrase>ABAT</phrase> <phrase>bit</phrase>. If the <phrase>CAN</phrase>CTRL.<phrase>ABAT</phrase> <phrase>bit</phrase> is<phrase> set</phrase> to abort all pending messages, the user <phrase>MUST</phrase> reset this <phrase>bit</phrase> (typically after the user verifies that all <phrase><phrase>TXREQ</phrase></phrase> <phrase>bits</phrase> have been<phrase> cleared</phrase>) to continue trasmit messages. The <phrase>CAN</phrase>CTRL.<phrase><phrase>ABTF</phrase></phrase> flag will only be<phrase> set</phrase> if the abort was requested via the <phrase>CAN</phrase>CTRL.<phrase>ABAT</phrase> <phrase>bit</phrase>. Aborting a message by resetting the <phrase><phrase>TXREQ</phrase></phrase> <phrase>bit</phrase> does cause the <phrase>ATBF</phrase> <phrase>bit</phrase> to be<phrase> set</phrase>.

Of the three Receive Buffers, the <phrase>MAB</phrase> is always committed to receiving the next message from the <phrase>bus</phrase>. The remaining two receive buffers are called RXB0 and RXB1 and can receive a complete message from the protocol <phrase>engine</phrase>.
The <phrase>MAB</phrase> assembles all messages received.<phrase><phrase> These messages </phrase>will be transferred to the <phrase>RXBN</phrase> buffers (See Register 4-4 to Register 4-9) only </phrase>if <phrase>the acceptance filter criteria are met</phrase>. When a message is moved into either of the receive buffers the appropriate <phrase>CAN</phrase><phrase>INT</phrase>F.<phrase>RXN</phrase>IF <phrase>bit</phrase> is<phrase> set</phrase>.<phrase> This <phrase>bit</phrase> </phrase>must be<phrase> cleared</phrase> by<phrase> the <phrase><phrase>MCU</phrase></phrase></phrase>, when <phrase>it has completed processing the message in the buffer, in <phrase>order</phrase> to allow a new message to be received into the buffer</phrase>. If the <phrase>CAN</phrase><phrase>INT</phrase><phrase>E</phrase>.<phrase>RXN</phrase>IE <phrase>bit</phrase> is<phrase> set</phrase> an interrupt will be generate on the <phrase>INT</phrase> pin to indicate that a valid message has been received. When a message is received, <phrase>bits</phrase> <3:0> of the <phrase>RXBN</phrase>CTRL Register will indicate the acceptance filter number that enabled reception, and whether the received message is a remote transfer request.
<phrase>if a message has an error </phrase>before the end of frame, that portion of the message assembled in the <phrase>MAB</phrase> before the error frame will be<phrase> loaded into the buffer</phrase>. <phrase>This mode</phrase> has some value in
<phrase>debugging</phrase> a <phrase>CAN</phrase> system and would not be used in an actual system environment.


<phrase>Failsafe is the method the device uses to enter <phrase>sleep mode</phrase> from various other modes </phrase>when <phrase>specific issues arise</phrase>.<phrase> This feature uses the Sleep Wake Error (<phrase>SWE</phrase>) timer to determine </phrase>if the node processor can communicate to the T<phrase>CAN</phrase>4550-Q1.
Upon <phrase>power up</phrase> the <phrase>SWE</phrase> timer starts, tINACTIVE, the processor has typically four minutes to configure the T<phrase>CAN</phrase>4550-Q1, clear the <phrase>PWRON</phrase> flag or configure the device for <phrase>normal mode</phrase>.
If the device has not had the <phrase>PWRON</phrase> flag<phrase> cleared</phrase> or been placed into <phrase>normal mode</phrase>, it
enters <phrase>sleep mode</phrase>.<phrase> The device wakes up </phrase>if the <phrase>CAN</phrase> <phrase>bus</phrase> provides a <phrase>WUP</phrase> or a local wake event takes place, thus entering <phrase>standby mode</phrase>. Once <phrase>in <phrase>standby mode</phrase> tSILENCE and tINACTIVE timers starts</phrase>. If tINACTIVE expires, the device re-enters <phrase>sleep mode</phrase>.
